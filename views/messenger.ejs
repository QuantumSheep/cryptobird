<% layout('layout') -%>
<% block('title', "Messages") -%>
<div class="h-100 d-flex">
    <div class="h-100 d-flex flex-column border-right" style="width:20em;min-width:20em;max-width:20em;">
        <input id="search" class="form-control px-3" autocomplete="off" placeholder="Search">
        <div id="search-response" class="p-0 overflow-auto" style="display:none;">
            <small class="px-2 text-secondary">Contacts</small>
            <div id="search-contacts" class="list-group"></div>
            <small class="px-2 text-secondary">Others</small>
            <ul id="search-others" class="list-group"></ul>
            <small class="px-2 text-secondary">Asked</small>
            <ul id="search-asked" class="list-group"></ul>
        </div>
        <div id="contact-list" class="list-group p-0 overflow-auto">
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start active">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">QuantumSheep</h5>
                    <small>2 hours ago</small>
                </div>
                <small class="limited-text w-100">So yesterday I told you that that will be great if we go to Camping this week!</small>
            </a>
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">Loli girl</h5>
                    <small>1 days ago</small>
                </div>
                <small class="limited-text w-100">I swear I've 21 years old</small>
            </a>
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">Hitsu</h5>
                    <small>5 days ago</small>
                </div>
                <small class="limited-text w-100">He's such a good and modest developper</small>
            </a>
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">Simon</h5>
                    <small>6 days ago</small>
                </div>
                <small class="limited-text w-100">I finished that amazing book from Asimov the last week, it was gorgeous!</small>
            </a>
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">Michael</h5>
                    <small>6 days ago</small>
                </div>
                <small class="limited-text w-100">And then I vomited all my spagets</small>
            </a>
        </div>
    </div>
    <div class="h-100 w-100">
        <div class="d-flex flex-column h-100 w-100">
            <ul id="messages" class="h-100 m-0 p-0"></ul>
            <form id="input" class="d-flex w-100 border-top m-0">
                <input class="form-control w-100 h-100 p-2" name="m" autocomplete="off" placeholder="Message">
                <button type="submit" class="btn btn-primary bg-primary text-white m-0">Send</button>
            </form>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    socket.emit('user connect', {
        url: window.location.pathname
    });

    socket.on('chat message', (from, msg) => {
        document.getElementById("messages").innerHTML += `<li>${msg}</li>`;
        document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight - document.getElementById("messages").clientHeight;
    });

    socket.on('list messages', msgs => {
        if(msgs) {
            msgs.forEach(msg => {
                const row = document.createElement("li");
                row.appendChild(document.createTextNode(`${msg.username}: ${msg.content}`));

                document.getElementById("messages").insertBefore(row, document.getElementById("messages").firstChild);

                document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight - document.getElementById("messages").clientHeight;
            });
        }
    });

    function addContact(elem, id) {
        const http = new XMLHttpRequest();
        http.open("POST", "/addcontact", true);

        http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

        http.onreadystatechange = (req, ev) => {
            if(http.readyState == 4 && http.status == 200) {
                if(JSON.parse(http.responseText).response == 1) {
                    elem.remove();
                }
            }
        }

        http.send(`user=${id}`);
    }

    socket.on('contact search', (users, type) => {
        if(users) {
            if(type === 'contact') {
                document.getElementById("search-contacts").innerHTML = "";

                users.forEach(user => {
                    document.getElementById("search-contacts").innerHTML += `<a href="/messenger/${user.id}" class="list-group-item list-group-item-action p-2 active"><small>${user.username}</small></a>`;
                });
            } else if(type === 'others') {
                document.getElementById("search-others").innerHTML = "";

                users.forEach(user => {
                    document.getElementById("search-others").innerHTML += `<li class="list-group-item d-flex justify-content-between align-items-center p-2 active"><small>${user.username}</small><small class="fas fa-plus cursor-pointer" onclick="addContact(this, ${user.id});"></small></li>`;
                });
            } else if(type === 'asked') {
                document.getElementById("search-asked").innerHTML = "";

                users.forEach(user => {
                    document.getElementById("search-asked").innerHTML += `<li class="list-group-item p-2 active"><small>${user.username}</small></li>`;
                });
            }
        }
    });

    document.getElementById("input").addEventListener("submit", e => {
        e.preventDefault();

        socket.emit('chat message', e.target.m.value);

        e.target.m.value = "";
        return false;
    });

    document.getElementById("search").addEventListener("input", e => {
        if(e.target.value) {
            socket.emit('contact search', e.target.value);

            document.getElementById("contact-list").style.display = "none";
            document.getElementById("search-response").style.display = "";
        } else {
            document.getElementById("search-response").style.display = "none";
            document.getElementById("contact-list").style.display = "";
        }
    });

    socket.emit('get messages', 0);
</script>